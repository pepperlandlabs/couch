var shrink = require('..');

// Fixtures
var urlWithAlias = {
    url: 'http://google.com',
    alias: 'goog'
  },
  repeatAlias = {
    url: 'http://plus.google.com/',
    alias: 'goog'
  },
  repeatUrl = {
    url: 'http://google.com/'
  },
  urlWithoutAlias = {
    url: 'http://facebook.com'
  },
  urlAsString = 'http://mohni.sh/',
  noUrl, emptyUrl = '',
  invalidUrl = 'mohnish12312312';

describe('shrink', function() {
  it('should be defined', function() {
    shrink.should.be.defined;
  });

  describe('shorten', function() {
    describe('for invalid urls', function() {
      it('should return false with a message if url was not supplied', function() {
        var result = shrink.shorten(noUrl);
        result.status.should.be.false;
        result.message.should.eql("String is empty");
      });
      it('should return false with a message if empty string is supplied', function() {
        var result = shrink.shorten(emptyUrl);
        result.status.should.be.false;
        result.message.should.eql("String is empty");
      });
      it('should return false with a message if invalid url is supplied', function() {
        var result = shrink.shorten(invalidUrl);
        result.status.should.be.false;
        result.message.should.eql("Invalid URL");
      });

    });

    describe('for valid urls', function() {
      describe('passed as string', function() {
        it('should return true, success message, long url, short url', function() {
          var result = shrink.shorten(urlAsString);
          result.status.should.be.true;
          result.message.should.eql('Success');
          result.longUrl.should.eql(urlAsString)
        });
      });
      describe('passed as an object', function() {
        describe('with alias', function() {
          // TODO
        });
        describe('without alias', function() {
          // TODO
        });
      });
    });
  });
});